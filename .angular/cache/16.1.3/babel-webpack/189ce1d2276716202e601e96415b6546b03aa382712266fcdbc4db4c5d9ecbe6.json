{"ast":null,"code":"import { ɵgetAllInstancesOf, ɵisAnalyticsSupportedFactory, ɵzoneWrap, VERSION, ɵgetDefaultInstanceOf, ɵAngularFireSchedulers } from '@angular/fire';\nimport { timer, from, of } from 'rxjs';\nimport { concatMap, distinct, filter, switchMap, map, groupBy, mergeMap, distinctUntilChanged, startWith, pairwise } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { Injectable, Optional, InjectionToken, APP_INITIALIZER, NgModule, NgZone, Injector } from '@angular/core';\nimport { FirebaseApp, FirebaseApps } from '@angular/fire/app';\nimport { registerVersion } from 'firebase/app';\nimport { __awaiter } from 'tslib';\nimport * as i1$1 from '@angular/router';\nimport { ActivationEnd, ɵEmptyOutletComponent } from '@angular/router';\nimport * as i2 from '@angular/platform-browser';\nimport { getAnalytics as getAnalytics$1, initializeAnalytics as initializeAnalytics$1, logEvent as logEvent$1, setAnalyticsCollectionEnabled as setAnalyticsCollectionEnabled$1, setCurrentScreen as setCurrentScreen$1, settings as settings$1, setUserId as setUserId$1, setUserProperties as setUserProperties$1 } from 'firebase/analytics';\nexport * from 'firebase/analytics';\nimport * as i1 from '@angular/fire/auth';\nimport { authState } from '@angular/fire/auth';\nclass Analytics {\n  constructor(analytics) {\n    return analytics;\n  }\n}\nconst ANALYTICS_PROVIDER_NAME = 'analytics';\nclass AnalyticsInstances {\n  constructor() {\n    return ɵgetAllInstancesOf(ANALYTICS_PROVIDER_NAME);\n  }\n}\nconst analyticInstance$ = timer(0, 300).pipe(concatMap(() => from(ɵgetAllInstancesOf(ANALYTICS_PROVIDER_NAME))), distinct());\nconst isSupported = ɵisAnalyticsSupportedFactory.async;\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nconst getAnalytics = ɵzoneWrap(getAnalytics$1, true);\nconst initializeAnalytics = ɵzoneWrap(initializeAnalytics$1, true);\nconst logEvent = ɵzoneWrap(logEvent$1, true);\nconst setAnalyticsCollectionEnabled = ɵzoneWrap(setAnalyticsCollectionEnabled$1, true);\nconst setCurrentScreen = ɵzoneWrap(setCurrentScreen$1, true);\nconst settings = ɵzoneWrap(settings$1, true);\nconst setUserId = ɵzoneWrap(setUserId$1, true);\nconst setUserProperties = ɵzoneWrap(setUserProperties$1, true);\nclass UserTrackingService {\n  constructor(auth, zone, injector) {\n    this.disposables = [];\n    registerVersion('angularfire', VERSION.full, 'user-tracking');\n    let resolveInitialized;\n    this.initialized = zone.runOutsideAngular(() => new Promise(resolve => {\n      resolveInitialized = resolve;\n    }));\n    // The APP_INITIALIZER that is making isSupported() sync for the sake of convenient DI\n    // may not be done when services are initialized. Guard the functionality by first ensuring\n    // that the (global) promise has resolved, then get Analytics from the injector.\n    isSupported().then(() => {\n      const analytics = injector.get(Analytics);\n      if (analytics) {\n        this.disposables = [\n        // TODO add credential tracking back in\n        authState(auth).subscribe(user => {\n          setUserId(analytics, user === null || user === void 0 ? void 0 : user.uid);\n          resolveInitialized();\n        })];\n      } else {\n        resolveInitialized();\n      }\n    });\n  }\n  ngOnDestroy() {\n    this.disposables.forEach(it => it.unsubscribe());\n  }\n}\nUserTrackingService.ɵfac = function UserTrackingService_Factory(t) {\n  return new (t || UserTrackingService)(i0.ɵɵinject(i1.Auth), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i0.Injector));\n};\nUserTrackingService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: UserTrackingService,\n  factory: UserTrackingService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UserTrackingService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1.Auth\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.Injector\n    }];\n  }, null);\n})();\nconst FIREBASE_EVENT_ORIGIN_KEY = 'firebase_event_origin';\nconst FIREBASE_PREVIOUS_SCREEN_CLASS_KEY = 'firebase_previous_class';\nconst FIREBASE_PREVIOUS_SCREEN_INSTANCE_ID_KEY = 'firebase_previous_id';\nconst FIREBASE_PREVIOUS_SCREEN_NAME_KEY = 'firebase_previous_screen';\nconst FIREBASE_SCREEN_CLASS_KEY = 'firebase_screen_class';\nconst FIREBASE_SCREEN_INSTANCE_ID_KEY = 'firebase_screen_id';\nconst FIREBASE_SCREEN_NAME_KEY = 'firebase_screen';\nconst OUTLET_KEY = 'outlet';\nconst PAGE_PATH_KEY = 'page_path';\nconst PAGE_TITLE_KEY = 'page_title';\nconst SCREEN_CLASS_KEY = 'screen_class';\nconst SCREEN_NAME_KEY = 'screen_name';\nconst SCREEN_VIEW_EVENT = 'screen_view';\nconst EVENT_ORIGIN_AUTO = 'auto';\nconst SCREEN_INSTANCE_DELIMITER = '#';\n// this is an INT64 in iOS/Android but use INT32 cause javascript\nlet nextScreenInstanceID = Math.floor(Math.random() * (Math.pow(2, 32) - 1)) - Math.pow(2, 31);\nconst knownScreenInstanceIDs = {};\nconst getScreenInstanceID = params => {\n  // unique the screen class against the outlet name\n  const screenInstanceKey = [params[SCREEN_CLASS_KEY], params[OUTLET_KEY]].join(SCREEN_INSTANCE_DELIMITER);\n  if (knownScreenInstanceIDs.hasOwnProperty(screenInstanceKey)) {\n    return knownScreenInstanceIDs[screenInstanceKey];\n  } else {\n    const ret = nextScreenInstanceID++;\n    knownScreenInstanceIDs[screenInstanceKey] = ret;\n    return ret;\n  }\n};\nconst ɵscreenViewEvent = (router, title, componentFactoryResolver) => {\n  const activationEndEvents = router.events.pipe(filter(e => e instanceof ActivationEnd));\n  return activationEndEvents.pipe(switchMap(activationEnd => {\n    var _a;\n    // router parseUrl is having trouble with outlets when they're empty\n    // e.g, /asdf/1(bob://sally:asdf), so put another slash in when empty\n    const urlTree = router.parseUrl(router.url.replace(/(?:\\().+(?:\\))/g, a => a.replace('://', ':///')));\n    const pagePath = ((_a = urlTree.root.children[activationEnd.snapshot.outlet]) === null || _a === void 0 ? void 0 : _a.toString()) || '';\n    const actualSnapshot = router.routerState.root.children.map(it => it).find(it => it.outlet === activationEnd.snapshot.outlet);\n    if (!actualSnapshot) {\n      return of(null);\n    }\n    let actualDeep = actualSnapshot;\n    while (actualDeep.firstChild) {\n      actualDeep = actualDeep.firstChild;\n    }\n    const screenName = actualDeep.pathFromRoot.map(s => {\n      var _a;\n      return (_a = s.routeConfig) === null || _a === void 0 ? void 0 : _a.path;\n    }).filter(it => it).join('/') || '/';\n    const params = {\n      [SCREEN_NAME_KEY]: screenName,\n      [PAGE_PATH_KEY]: `/${pagePath}`,\n      [FIREBASE_EVENT_ORIGIN_KEY]: EVENT_ORIGIN_AUTO,\n      [FIREBASE_SCREEN_NAME_KEY]: screenName,\n      [OUTLET_KEY]: activationEnd.snapshot.outlet\n    };\n    if (title) {\n      params[PAGE_TITLE_KEY] = title.getTitle();\n    }\n    let component = actualSnapshot.component;\n    if (component) {\n      if (component === ɵEmptyOutletComponent) {\n        let deepSnapshot = activationEnd.snapshot;\n        // TODO when might there be mutple children, different outlets? explore\n        while (deepSnapshot.firstChild) {\n          deepSnapshot = deepSnapshot.firstChild;\n        }\n        component = deepSnapshot.component;\n      }\n    } else {\n      component = activationEnd.snapshot.component;\n    }\n    if (typeof component === 'string') {\n      return of(Object.assign(Object.assign({}, params), {\n        [SCREEN_CLASS_KEY]: component\n      }));\n    } else if (component) {\n      const componentFactory = componentFactoryResolver.resolveComponentFactory(component);\n      return of(Object.assign(Object.assign({}, params), {\n        [SCREEN_CLASS_KEY]: componentFactory.selector\n      }));\n    }\n    // lazy loads cause extra activations, ignore\n    return of(null);\n  }), filter(it => !!it), map(params => Object.assign({\n    [FIREBASE_SCREEN_CLASS_KEY]: params[SCREEN_CLASS_KEY],\n    [FIREBASE_SCREEN_INSTANCE_ID_KEY]: getScreenInstanceID(params)\n  }, params)), groupBy(it => it[OUTLET_KEY]), mergeMap(it => it.pipe(distinctUntilChanged((a, b) => JSON.stringify(a) === JSON.stringify(b)), startWith(undefined), pairwise(), map(([prior, current]) => prior ? Object.assign({\n    [FIREBASE_PREVIOUS_SCREEN_CLASS_KEY]: prior[SCREEN_CLASS_KEY],\n    [FIREBASE_PREVIOUS_SCREEN_NAME_KEY]: prior[SCREEN_NAME_KEY],\n    [FIREBASE_PREVIOUS_SCREEN_INSTANCE_ID_KEY]: prior[FIREBASE_SCREEN_INSTANCE_ID_KEY]\n  }, current) : current))));\n};\nclass ScreenTrackingService {\n  constructor(router, title, componentFactoryResolver, zone, userTrackingService, injector) {\n    registerVersion('angularfire', VERSION.full, 'screen-tracking');\n    // The APP_INITIALIZER that is making isSupported() sync for the sake of convenient DI\n    // may not be done when services are initialized. Guard the functionality by first ensuring\n    // that the (global) promise has resolved, then get Analytics from the injector.\n    isSupported().then(() => {\n      const analytics = injector.get(Analytics);\n      if (!router || !analytics) {\n        return;\n      }\n      zone.runOutsideAngular(() => {\n        this.disposable = ɵscreenViewEvent(router, title, componentFactoryResolver).pipe(switchMap(params => __awaiter(this, void 0, void 0, function* () {\n          if (userTrackingService) {\n            yield userTrackingService.initialized;\n          }\n          return logEvent(analytics, SCREEN_VIEW_EVENT, params);\n        }))).subscribe();\n      });\n    });\n  }\n  ngOnDestroy() {\n    if (this.disposable) {\n      this.disposable.unsubscribe();\n    }\n  }\n}\nScreenTrackingService.ɵfac = function ScreenTrackingService_Factory(t) {\n  return new (t || ScreenTrackingService)(i0.ɵɵinject(i1$1.Router, 8), i0.ɵɵinject(i2.Title, 8), i0.ɵɵinject(i0.ComponentFactoryResolver), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(UserTrackingService, 8), i0.ɵɵinject(i0.Injector));\n};\nScreenTrackingService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ScreenTrackingService,\n  factory: ScreenTrackingService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ScreenTrackingService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1$1.Router,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i2.Title,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.ComponentFactoryResolver\n    }, {\n      type: i0.NgZone\n    }, {\n      type: UserTrackingService,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.Injector\n    }];\n  }, null);\n})();\nconst PROVIDED_ANALYTICS_INSTANCES = new InjectionToken('angularfire2.analytics-instances');\nfunction defaultAnalyticsInstanceFactory(provided, defaultApp) {\n  if (!ɵisAnalyticsSupportedFactory.sync()) {\n    return null;\n  }\n  const defaultAnalytics = ɵgetDefaultInstanceOf(ANALYTICS_PROVIDER_NAME, provided, defaultApp);\n  return defaultAnalytics && new Analytics(defaultAnalytics);\n}\nfunction analyticsInstanceFactory(fn) {\n  return (zone, injector) => {\n    if (!ɵisAnalyticsSupportedFactory.sync()) {\n      return null;\n    }\n    const analytics = zone.runOutsideAngular(() => fn(injector));\n    return new Analytics(analytics);\n  };\n}\nconst ANALYTICS_INSTANCES_PROVIDER = {\n  provide: AnalyticsInstances,\n  deps: [[new Optional(), PROVIDED_ANALYTICS_INSTANCES]]\n};\nconst DEFAULT_ANALYTICS_INSTANCE_PROVIDER = {\n  provide: Analytics,\n  useFactory: defaultAnalyticsInstanceFactory,\n  deps: [[new Optional(), PROVIDED_ANALYTICS_INSTANCES], FirebaseApp]\n};\nclass AnalyticsModule {\n  constructor(_screenTrackingService, _userTrackingService) {\n    registerVersion('angularfire', VERSION.full, 'analytics');\n  }\n}\nAnalyticsModule.ɵfac = function AnalyticsModule_Factory(t) {\n  return new (t || AnalyticsModule)(i0.ɵɵinject(ScreenTrackingService, 8), i0.ɵɵinject(UserTrackingService, 8));\n};\nAnalyticsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AnalyticsModule\n});\nAnalyticsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [DEFAULT_ANALYTICS_INSTANCE_PROVIDER, ANALYTICS_INSTANCES_PROVIDER, {\n    provide: APP_INITIALIZER,\n    useValue: ɵisAnalyticsSupportedFactory.async,\n    multi: true\n  }]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AnalyticsModule, [{\n    type: NgModule,\n    args: [{\n      providers: [DEFAULT_ANALYTICS_INSTANCE_PROVIDER, ANALYTICS_INSTANCES_PROVIDER, {\n        provide: APP_INITIALIZER,\n        useValue: ɵisAnalyticsSupportedFactory.async,\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [{\n      type: ScreenTrackingService,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: UserTrackingService,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\nfunction provideAnalytics(fn, ...deps) {\n  return {\n    ngModule: AnalyticsModule,\n    providers: [{\n      provide: PROVIDED_ANALYTICS_INSTANCES,\n      useFactory: analyticsInstanceFactory(fn),\n      multi: true,\n      deps: [NgZone, Injector, ɵAngularFireSchedulers, FirebaseApps, ...deps]\n    }]\n  };\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Analytics, AnalyticsInstances, AnalyticsModule, ScreenTrackingService, UserTrackingService, analyticInstance$, getAnalytics, initializeAnalytics, isSupported, logEvent, provideAnalytics, setAnalyticsCollectionEnabled, setCurrentScreen, setUserId, setUserProperties, settings, ɵscreenViewEvent };","map":{"version":3,"names":["ɵgetAllInstancesOf","ɵisAnalyticsSupportedFactory","ɵzoneWrap","VERSION","ɵgetDefaultInstanceOf","ɵAngularFireSchedulers","timer","from","of","concatMap","distinct","filter","switchMap","map","groupBy","mergeMap","distinctUntilChanged","startWith","pairwise","i0","Injectable","Optional","InjectionToken","APP_INITIALIZER","NgModule","NgZone","Injector","FirebaseApp","FirebaseApps","registerVersion","__awaiter","i1$1","ActivationEnd","ɵEmptyOutletComponent","i2","getAnalytics","getAnalytics$1","initializeAnalytics","initializeAnalytics$1","logEvent","logEvent$1","setAnalyticsCollectionEnabled","setAnalyticsCollectionEnabled$1","setCurrentScreen","setCurrentScreen$1","settings","settings$1","setUserId","setUserId$1","setUserProperties","setUserProperties$1","i1","authState","Analytics","constructor","analytics","ANALYTICS_PROVIDER_NAME","AnalyticsInstances","analyticInstance$","pipe","isSupported","async","UserTrackingService","auth","zone","injector","disposables","full","resolveInitialized","initialized","runOutsideAngular","Promise","resolve","then","get","subscribe","user","uid","ngOnDestroy","forEach","it","unsubscribe","ɵfac","UserTrackingService_Factory","t","ɵɵinject","Auth","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode","ɵsetClassMetadata","type","FIREBASE_EVENT_ORIGIN_KEY","FIREBASE_PREVIOUS_SCREEN_CLASS_KEY","FIREBASE_PREVIOUS_SCREEN_INSTANCE_ID_KEY","FIREBASE_PREVIOUS_SCREEN_NAME_KEY","FIREBASE_SCREEN_CLASS_KEY","FIREBASE_SCREEN_INSTANCE_ID_KEY","FIREBASE_SCREEN_NAME_KEY","OUTLET_KEY","PAGE_PATH_KEY","PAGE_TITLE_KEY","SCREEN_CLASS_KEY","SCREEN_NAME_KEY","SCREEN_VIEW_EVENT","EVENT_ORIGIN_AUTO","SCREEN_INSTANCE_DELIMITER","nextScreenInstanceID","Math","floor","random","pow","knownScreenInstanceIDs","getScreenInstanceID","params","screenInstanceKey","join","hasOwnProperty","ret","ɵscreenViewEvent","router","title","componentFactoryResolver","activationEndEvents","events","e","activationEnd","_a","urlTree","parseUrl","url","replace","a","pagePath","root","children","snapshot","outlet","toString","actualSnapshot","routerState","find","actualDeep","firstChild","screenName","pathFromRoot","s","routeConfig","path","getTitle","component","deepSnapshot","Object","assign","componentFactory","resolveComponentFactory","selector","b","JSON","stringify","undefined","prior","current","ScreenTrackingService","userTrackingService","disposable","ScreenTrackingService_Factory","Router","Title","ComponentFactoryResolver","decorators","PROVIDED_ANALYTICS_INSTANCES","defaultAnalyticsInstanceFactory","provided","defaultApp","sync","defaultAnalytics","analyticsInstanceFactory","fn","ANALYTICS_INSTANCES_PROVIDER","provide","deps","DEFAULT_ANALYTICS_INSTANCE_PROVIDER","useFactory","AnalyticsModule","_screenTrackingService","_userTrackingService","AnalyticsModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","providers","useValue","multi","args","provideAnalytics","ngModule"],"sources":["/Users/sethrollins/development/Project_Folder/bauhaus-site/node_modules/@angular/fire/fesm2015/angular-fire-analytics.js"],"sourcesContent":["import { ɵgetAllInstancesOf, ɵisAnalyticsSupportedFactory, ɵzoneWrap, VERSION, ɵgetDefaultInstanceOf, ɵAngularFireSchedulers } from '@angular/fire';\nimport { timer, from, of } from 'rxjs';\nimport { concatMap, distinct, filter, switchMap, map, groupBy, mergeMap, distinctUntilChanged, startWith, pairwise } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { Injectable, Optional, InjectionToken, APP_INITIALIZER, NgModule, NgZone, Injector } from '@angular/core';\nimport { FirebaseApp, FirebaseApps } from '@angular/fire/app';\nimport { registerVersion } from 'firebase/app';\nimport { __awaiter } from 'tslib';\nimport * as i1$1 from '@angular/router';\nimport { ActivationEnd, ɵEmptyOutletComponent } from '@angular/router';\nimport * as i2 from '@angular/platform-browser';\nimport { getAnalytics as getAnalytics$1, initializeAnalytics as initializeAnalytics$1, logEvent as logEvent$1, setAnalyticsCollectionEnabled as setAnalyticsCollectionEnabled$1, setCurrentScreen as setCurrentScreen$1, settings as settings$1, setUserId as setUserId$1, setUserProperties as setUserProperties$1 } from 'firebase/analytics';\nexport * from 'firebase/analytics';\nimport * as i1 from '@angular/fire/auth';\nimport { authState } from '@angular/fire/auth';\n\nclass Analytics {\n    constructor(analytics) {\n        return analytics;\n    }\n}\nconst ANALYTICS_PROVIDER_NAME = 'analytics';\nclass AnalyticsInstances {\n    constructor() {\n        return ɵgetAllInstancesOf(ANALYTICS_PROVIDER_NAME);\n    }\n}\nconst analyticInstance$ = timer(0, 300).pipe(concatMap(() => from(ɵgetAllInstancesOf(ANALYTICS_PROVIDER_NAME))), distinct());\n\nconst isSupported = ɵisAnalyticsSupportedFactory.async;\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nconst getAnalytics = ɵzoneWrap(getAnalytics$1, true);\nconst initializeAnalytics = ɵzoneWrap(initializeAnalytics$1, true);\nconst logEvent = ɵzoneWrap(logEvent$1, true);\nconst setAnalyticsCollectionEnabled = ɵzoneWrap(setAnalyticsCollectionEnabled$1, true);\nconst setCurrentScreen = ɵzoneWrap(setCurrentScreen$1, true);\nconst settings = ɵzoneWrap(settings$1, true);\nconst setUserId = ɵzoneWrap(setUserId$1, true);\nconst setUserProperties = ɵzoneWrap(setUserProperties$1, true);\n\nclass UserTrackingService {\n    constructor(auth, zone, injector) {\n        this.disposables = [];\n        registerVersion('angularfire', VERSION.full, 'user-tracking');\n        let resolveInitialized;\n        this.initialized = zone.runOutsideAngular(() => new Promise(resolve => { resolveInitialized = resolve; }));\n        // The APP_INITIALIZER that is making isSupported() sync for the sake of convenient DI\n        // may not be done when services are initialized. Guard the functionality by first ensuring\n        // that the (global) promise has resolved, then get Analytics from the injector.\n        isSupported().then(() => {\n            const analytics = injector.get(Analytics);\n            if (analytics) {\n                this.disposables = [\n                    // TODO add credential tracking back in\n                    authState(auth).subscribe(user => {\n                        setUserId(analytics, user === null || user === void 0 ? void 0 : user.uid);\n                        resolveInitialized();\n                    }),\n                ];\n            }\n            else {\n                resolveInitialized();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this.disposables.forEach(it => it.unsubscribe());\n    }\n}\nUserTrackingService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: UserTrackingService, deps: [{ token: i1.Auth }, { token: i0.NgZone }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable });\nUserTrackingService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: UserTrackingService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: UserTrackingService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1.Auth }, { type: i0.NgZone }, { type: i0.Injector }]; } });\n\nconst FIREBASE_EVENT_ORIGIN_KEY = 'firebase_event_origin';\nconst FIREBASE_PREVIOUS_SCREEN_CLASS_KEY = 'firebase_previous_class';\nconst FIREBASE_PREVIOUS_SCREEN_INSTANCE_ID_KEY = 'firebase_previous_id';\nconst FIREBASE_PREVIOUS_SCREEN_NAME_KEY = 'firebase_previous_screen';\nconst FIREBASE_SCREEN_CLASS_KEY = 'firebase_screen_class';\nconst FIREBASE_SCREEN_INSTANCE_ID_KEY = 'firebase_screen_id';\nconst FIREBASE_SCREEN_NAME_KEY = 'firebase_screen';\nconst OUTLET_KEY = 'outlet';\nconst PAGE_PATH_KEY = 'page_path';\nconst PAGE_TITLE_KEY = 'page_title';\nconst SCREEN_CLASS_KEY = 'screen_class';\nconst SCREEN_NAME_KEY = 'screen_name';\nconst SCREEN_VIEW_EVENT = 'screen_view';\nconst EVENT_ORIGIN_AUTO = 'auto';\nconst SCREEN_INSTANCE_DELIMITER = '#';\n// this is an INT64 in iOS/Android but use INT32 cause javascript\nlet nextScreenInstanceID = Math.floor(Math.random() * (Math.pow(2, 32) - 1)) - Math.pow(2, 31);\nconst knownScreenInstanceIDs = {};\nconst getScreenInstanceID = (params) => {\n    // unique the screen class against the outlet name\n    const screenInstanceKey = [\n        params[SCREEN_CLASS_KEY],\n        params[OUTLET_KEY]\n    ].join(SCREEN_INSTANCE_DELIMITER);\n    if (knownScreenInstanceIDs.hasOwnProperty(screenInstanceKey)) {\n        return knownScreenInstanceIDs[screenInstanceKey];\n    }\n    else {\n        const ret = nextScreenInstanceID++;\n        knownScreenInstanceIDs[screenInstanceKey] = ret;\n        return ret;\n    }\n};\nconst ɵscreenViewEvent = (router, title, componentFactoryResolver) => {\n    const activationEndEvents = router.events.pipe(filter(e => e instanceof ActivationEnd));\n    return activationEndEvents.pipe(switchMap(activationEnd => {\n        var _a;\n        // router parseUrl is having trouble with outlets when they're empty\n        // e.g, /asdf/1(bob://sally:asdf), so put another slash in when empty\n        const urlTree = router.parseUrl(router.url.replace(/(?:\\().+(?:\\))/g, a => a.replace('://', ':///')));\n        const pagePath = ((_a = urlTree.root.children[activationEnd.snapshot.outlet]) === null || _a === void 0 ? void 0 : _a.toString()) || '';\n        const actualSnapshot = router.routerState.root.children.map(it => it).find(it => it.outlet === activationEnd.snapshot.outlet);\n        if (!actualSnapshot) {\n            return of(null);\n        }\n        let actualDeep = actualSnapshot;\n        while (actualDeep.firstChild) {\n            actualDeep = actualDeep.firstChild;\n        }\n        const screenName = actualDeep.pathFromRoot.map(s => { var _a; return (_a = s.routeConfig) === null || _a === void 0 ? void 0 : _a.path; }).filter(it => it).join('/') || '/';\n        const params = {\n            [SCREEN_NAME_KEY]: screenName,\n            [PAGE_PATH_KEY]: `/${pagePath}`,\n            [FIREBASE_EVENT_ORIGIN_KEY]: EVENT_ORIGIN_AUTO,\n            [FIREBASE_SCREEN_NAME_KEY]: screenName,\n            [OUTLET_KEY]: activationEnd.snapshot.outlet\n        };\n        if (title) {\n            params[PAGE_TITLE_KEY] = title.getTitle();\n        }\n        let component = actualSnapshot.component;\n        if (component) {\n            if (component === ɵEmptyOutletComponent) {\n                let deepSnapshot = activationEnd.snapshot;\n                // TODO when might there be mutple children, different outlets? explore\n                while (deepSnapshot.firstChild) {\n                    deepSnapshot = deepSnapshot.firstChild;\n                }\n                component = deepSnapshot.component;\n            }\n        }\n        else {\n            component = activationEnd.snapshot.component;\n        }\n        if (typeof component === 'string') {\n            return of(Object.assign(Object.assign({}, params), { [SCREEN_CLASS_KEY]: component }));\n        }\n        else if (component) {\n            const componentFactory = componentFactoryResolver.resolveComponentFactory(component);\n            return of(Object.assign(Object.assign({}, params), { [SCREEN_CLASS_KEY]: componentFactory.selector }));\n        }\n        // lazy loads cause extra activations, ignore\n        return of(null);\n    }), filter(it => !!it), map(params => (Object.assign({ [FIREBASE_SCREEN_CLASS_KEY]: params[SCREEN_CLASS_KEY], [FIREBASE_SCREEN_INSTANCE_ID_KEY]: getScreenInstanceID(params) }, params))), groupBy(it => it[OUTLET_KEY]), mergeMap(it => it.pipe(distinctUntilChanged((a, b) => JSON.stringify(a) === JSON.stringify(b)), startWith(undefined), pairwise(), map(([prior, current]) => prior ? Object.assign({ [FIREBASE_PREVIOUS_SCREEN_CLASS_KEY]: prior[SCREEN_CLASS_KEY], [FIREBASE_PREVIOUS_SCREEN_NAME_KEY]: prior[SCREEN_NAME_KEY], [FIREBASE_PREVIOUS_SCREEN_INSTANCE_ID_KEY]: prior[FIREBASE_SCREEN_INSTANCE_ID_KEY] }, current) : current))));\n};\nclass ScreenTrackingService {\n    constructor(router, title, componentFactoryResolver, zone, userTrackingService, injector) {\n        registerVersion('angularfire', VERSION.full, 'screen-tracking');\n        // The APP_INITIALIZER that is making isSupported() sync for the sake of convenient DI\n        // may not be done when services are initialized. Guard the functionality by first ensuring\n        // that the (global) promise has resolved, then get Analytics from the injector.\n        isSupported().then(() => {\n            const analytics = injector.get(Analytics);\n            if (!router || !analytics) {\n                return;\n            }\n            zone.runOutsideAngular(() => {\n                this.disposable = ɵscreenViewEvent(router, title, componentFactoryResolver).pipe(switchMap((params) => __awaiter(this, void 0, void 0, function* () {\n                    if (userTrackingService) {\n                        yield userTrackingService.initialized;\n                    }\n                    return logEvent(analytics, SCREEN_VIEW_EVENT, params);\n                }))).subscribe();\n            });\n        });\n    }\n    ngOnDestroy() {\n        if (this.disposable) {\n            this.disposable.unsubscribe();\n        }\n    }\n}\nScreenTrackingService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ScreenTrackingService, deps: [{ token: i1$1.Router, optional: true }, { token: i2.Title, optional: true }, { token: i0.ComponentFactoryResolver }, { token: i0.NgZone }, { token: UserTrackingService, optional: true }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable });\nScreenTrackingService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ScreenTrackingService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: ScreenTrackingService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.Router, decorators: [{\n                    type: Optional\n                }] }, { type: i2.Title, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ComponentFactoryResolver }, { type: i0.NgZone }, { type: UserTrackingService, decorators: [{\n                    type: Optional\n                }] }, { type: i0.Injector }]; } });\n\nconst PROVIDED_ANALYTICS_INSTANCES = new InjectionToken('angularfire2.analytics-instances');\nfunction defaultAnalyticsInstanceFactory(provided, defaultApp) {\n    if (!ɵisAnalyticsSupportedFactory.sync()) {\n        return null;\n    }\n    const defaultAnalytics = ɵgetDefaultInstanceOf(ANALYTICS_PROVIDER_NAME, provided, defaultApp);\n    return defaultAnalytics && new Analytics(defaultAnalytics);\n}\nfunction analyticsInstanceFactory(fn) {\n    return (zone, injector) => {\n        if (!ɵisAnalyticsSupportedFactory.sync()) {\n            return null;\n        }\n        const analytics = zone.runOutsideAngular(() => fn(injector));\n        return new Analytics(analytics);\n    };\n}\nconst ANALYTICS_INSTANCES_PROVIDER = {\n    provide: AnalyticsInstances,\n    deps: [\n        [new Optional(), PROVIDED_ANALYTICS_INSTANCES],\n    ]\n};\nconst DEFAULT_ANALYTICS_INSTANCE_PROVIDER = {\n    provide: Analytics,\n    useFactory: defaultAnalyticsInstanceFactory,\n    deps: [\n        [new Optional(), PROVIDED_ANALYTICS_INSTANCES],\n        FirebaseApp,\n    ]\n};\nclass AnalyticsModule {\n    constructor(_screenTrackingService, _userTrackingService) {\n        registerVersion('angularfire', VERSION.full, 'analytics');\n    }\n}\nAnalyticsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AnalyticsModule, deps: [{ token: ScreenTrackingService, optional: true }, { token: UserTrackingService, optional: true }], target: i0.ɵɵFactoryTarget.NgModule });\nAnalyticsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AnalyticsModule });\nAnalyticsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AnalyticsModule, providers: [\n        DEFAULT_ANALYTICS_INSTANCE_PROVIDER,\n        ANALYTICS_INSTANCES_PROVIDER,\n        {\n            provide: APP_INITIALIZER,\n            useValue: ɵisAnalyticsSupportedFactory.async,\n            multi: true,\n        }\n    ] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AnalyticsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        DEFAULT_ANALYTICS_INSTANCE_PROVIDER,\n                        ANALYTICS_INSTANCES_PROVIDER,\n                        {\n                            provide: APP_INITIALIZER,\n                            useValue: ɵisAnalyticsSupportedFactory.async,\n                            multi: true,\n                        }\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: ScreenTrackingService, decorators: [{\n                    type: Optional\n                }] }, { type: UserTrackingService, decorators: [{\n                    type: Optional\n                }] }]; } });\nfunction provideAnalytics(fn, ...deps) {\n    return {\n        ngModule: AnalyticsModule,\n        providers: [{\n                provide: PROVIDED_ANALYTICS_INSTANCES,\n                useFactory: analyticsInstanceFactory(fn),\n                multi: true,\n                deps: [\n                    NgZone,\n                    Injector,\n                    ɵAngularFireSchedulers,\n                    FirebaseApps,\n                    ...deps,\n                ]\n            }]\n    };\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Analytics, AnalyticsInstances, AnalyticsModule, ScreenTrackingService, UserTrackingService, analyticInstance$, getAnalytics, initializeAnalytics, isSupported, logEvent, provideAnalytics, setAnalyticsCollectionEnabled, setCurrentScreen, setUserId, setUserProperties, settings, ɵscreenViewEvent };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}